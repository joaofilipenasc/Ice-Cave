use "jerimum"

fundo = Imagem("background.png")
iceman = Imagem("cima.png")
bloco = Imagem("bloco.png")
bloco_trincado = Imagem("blocotrincado.png")

p_blocos = [		# col, row

	[150, 70, 2, 1],
	[150, 512, 2,8],
	[150, 460, 2,7],
	[150, 400, 2,6],
	[210, 400, 3,6],
	[70, 280, 1, 4],
	[130, 280, 2,4],
	[210, 70, 3, 1],
	[265, 130, 4,2],
	[210, 130, 3,2],
	[325, 130, 5,2],
	[385,130,6,2],
	[385, 190, 6,3],
	[385, 250, 6,4],
	[385, 315, 6,5],
	[385, 380, 6,6],
	[515, 325, 8,5],
	[455, 190, 7,3],
	[512, 65, 8,1],
	[515, 390, 8,6],
	[515, 450, 8,7],
	[515, 515, 8,8],
	[385,440,6,7],
	[315, 250, 5,4],
	[250,250,4,4],
	[265, 515, 4,8],
	[150, 130, 2,2],
	[70, 220, 1,3],
	[275, 400, 4,6]

]


var p_iceman_x := 74 #19 x 22 # posição inicial
var p_iceman_y := 511 # posição inicial

var p_iceman_colx = 8
var p_iceman_coly = 1


tipo Mapa
	desenhar()
		para i em p_blocos faça
  			bloco.desenhe(i[1], i[2], 1)
		fim
	fim
fim

mapa = Mapa()
mapa.desenhar()

var ultimo_comando = ""
colidiu(lado:Texto)
	# "w" cima
	# "a" esquerda
	# "d" direita
	# "s" baixo

	var retorno = falso

	var px := p_iceman_x / 64
	p_iceman_colx := px.inteiro

	var py := p_iceman_y / 64
	p_iceman_coly := py.inteiro

	#escreva "{p_iceman_colx} {p_iceman_coly}"

	se lado == "w" então
		se ultimo_comando == "s" então p_iceman_y := p_iceman_y - 10 fim

		ultimo_comando := "w"

		para i em p_blocos faça

			se i[4] == py.inteiro e px.inteiro == i[3] então
				se p_iceman_x >= i[1] então
					escreva "Colidiu cima"
					retorno := verdadeiro
				fim
			fim

		fim
	fim

	se lado == "a" então
		#se ultimo_comando == "d" então p_iceman_y := p_iceman_y - 10 fim
		se ultimo_comando == "d" então p_iceman_x := p_iceman_x - 10 fim

		escreva "{ultimo_comando}"
		ultimo_comando := "a"
		para i em p_blocos faça

			se i[4] == py.inteiro e px.inteiro == i[3] então
				se p_iceman_y - 40 > i[1] então
					retorno := verdadeiro
				fim
			fim

		fim
	fim

	se lado == "s" então
		se ultimo_comando == "w" então p_iceman_y := p_iceman_y + 10 fim
		ultimo_comando := "s"
		para i em p_blocos faça

			se i[4] == py.inteiro e px.inteiro == i[3] então
				se p_iceman_y - 100 <= i[2] então
					escreva "Colidiu baixo"
					retorno := verdadeiro
				fim
			fim

		fim
	fim

	se lado == "d" então
		se ultimo_comando == "a" então p_iceman_x := p_iceman_x + 10 fim

		ultimo_comando := "d"
		para i em p_blocos faça

			se i[4] == py.inteiro e px.inteiro == i[3] então
				escreva ""
				se p_iceman_x < i[2] então
					escreva "Colidiu direita"
					retorno := verdadeiro
				fim
			fim

		fim
	fim

	retorno
fim

tipo Iceman
  	andar()

  	var m_iceman_x := p_iceman_x
  	var m_iceman_y := p_iceman_y

		se Teclado.TECLA_PARA_CIMA e colidiu("w") == falso então
			p_iceman_y := p_iceman_y - 10
		fim

		se Teclado.TECLA_PARA_BAIXO e colidiu("s") == falso então
			p_iceman_y := p_iceman_y + 10
		fim

		se Teclado.TECLA_PARA_ESQUERDA e colidiu("a") == falso então
			p_iceman_x := p_iceman_x - 10
		fim

		se Teclado.TECLA_PARA_DIREITA e colidiu("d") == falso então
			p_iceman_x := p_iceman_x + 10
		fim

		#escreva "{p_iceman_x} {p_iceman_y}"
	fim
fim


iceman2 = Iceman()

atualize()

	iceman2.andar()
	#iceman.desenhe(p_iceman_x -30, p_iceman_y -30, 1)
	se p_iceman_x == 256 e p_iceman_y < 64 então
		escreva "VOCÊ CONSEGUIU!"
	fim
fim

desenhe()
	fundo.desenhe(0, 0, 0)
	iceman.desenhe(p_iceman_x , p_iceman_y, 1)
	mapa.desenhar()
fim

jogo.iniciar("icecave", 640, 640, atualize, desenhe, 20)
